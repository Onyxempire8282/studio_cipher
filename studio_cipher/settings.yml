models:
  default: "gpt-4o-mini"
  
orchestration:
  mode: "parallel_with_review_cycles"
  coordinator: "producer"
  review_gates: ["architecture", "integration", "production"]
  
agents:
  producer:
    role: "Executive Producer"
    priority: 1
    responsibilities: ["coordination", "integration", "final_decisions"]
    can_veto: ["scope_changes", "architecture_violations"]
    
  lyricist:
    role: "Backend MC"
    priority: 2
    responsibilities: ["api_design", "data_models", "business_logic", "security_implementation"]
    can_veto: ["data_integrity", "performance_violations"]
    
  designer:
    role: "Visual Architect"
    priority: 2
    responsibilities: ["ui_design", "ux_flows", "accessibility", "brand_consistency"]
    can_veto: ["accessibility_violations", "brand_violations"]
    
  security:
    role: "Security Guard"
    priority: 1
    responsibilities: ["threat_assessment", "security_review", "compliance_validation"]
    can_veto: ["security_violations", "compliance_failures"]

conflict_resolution:
  hierarchy:
    1: "security"      # Final word on auth, data protection, compliance
    2: "producer"      # Final word on feature scope, integration decisions  
    3: "lyricist"      # Final word on API design, data models
    4: "designer"      # Final word on UX flows, visual design

paths:
  runs_dir: "runs"
  prompts_dir: "prompts"
  missions_dir: "missions"
  output_structure: "{date}/claim-cipher-rebuild/{agent}/"

quality_gates:
  security_compliance: true
  accessibility_compliance: true
  performance_benchmarks: true
  test_coverage_minimum: 90
  
switches:
  auto_apply_changes: false
  require_human_approval: true
  pause_on_conflicts: true
  generate_documentation: true

brand_guidelines:
  naming_convention: "hip_hop_professional"
  comment_style: "studio_notes_with_emojis"
  voice: "confident_street_smart"
  aesthetic: "corporate_grit_with_soul"

tech_stack:
  frontend:
    framework: "React 18"
    styling: "CSS Modules" 
    routing: "React Router"
    http: "Axios"
    forms: "React Hook Form"
    testing: "Jest + React Testing Library"
    
  backend:
    runtime: "Node.js + Express + TypeScript"
    database: "SQLite (dev) → PostgreSQL (prod)"
    auth: "Argon2id + HTTP-only cookies"
    validation: "Zod schemas"
    security: "Helmet + express-rate-limit"
    testing: "Jest + Supertest"
    
  deployment:
    containerization: "Docker"
    ci_cd: "GitHub Actions"
    monitoring: "Security event logging"
